#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Data_base
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="files_db")]
	public partial class file_dataclassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertaction(action instance);
    partial void Updateaction(action instance);
    partial void Deleteaction(action instance);
    partial void Insertfile(file instance);
    partial void Updatefile(file instance);
    partial void Deletefile(file instance);
    partial void Insertfriend(friend instance);
    partial void Updatefriend(friend instance);
    partial void Deletefriend(friend instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    #endregion
		
		public file_dataclassesDataContext() : 
				base(global::Data_base.Properties.Settings.Default.files_dbConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public file_dataclassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public file_dataclassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public file_dataclassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public file_dataclassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<action> actions
		{
			get
			{
				return this.GetTable<action>();
			}
		}
		
		public System.Data.Linq.Table<file> files
		{
			get
			{
				return this.GetTable<file>();
			}
		}
		
		public System.Data.Linq.Table<friend> friends
		{
			get
			{
				return this.GetTable<friend>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetCount", IsComposable=true)]
		public System.Nullable<int> GetCount([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> user)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), date, user).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.UserRegister")]
		public ISingleResult<UserRegisterResult> UserRegister([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> u_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), u_id);
			return ((ISingleResult<UserRegisterResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetFiles")]
		public ISingleResult<GetFilesResult> GetFiles([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> f_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), f_id);
			return ((ISingleResult<GetFilesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetActionsHistory")]
		public ISingleResult<action> GetActionsHistory([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> user_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_id);
			return ((ISingleResult<action>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.actions")]
	public partial class action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _a_id;
		
		private int _u_id;
		
		private string _act_type;
		
		private System.Nullable<int> _fi_id;
		
		private System.DateTime _action_time;
		
		private EntityRef<file> _file;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ona_idChanging(int value);
    partial void Ona_idChanged();
    partial void Onu_idChanging(int value);
    partial void Onu_idChanged();
    partial void Onact_typeChanging(string value);
    partial void Onact_typeChanged();
    partial void Onfi_idChanging(System.Nullable<int> value);
    partial void Onfi_idChanged();
    partial void Onaction_timeChanging(System.DateTime value);
    partial void Onaction_timeChanged();
    #endregion
		
		public action()
		{
			this._file = default(EntityRef<file>);
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_a_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int a_id
		{
			get
			{
				return this._a_id;
			}
			set
			{
				if ((this._a_id != value))
				{
					this.Ona_idChanging(value);
					this.SendPropertyChanging();
					this._a_id = value;
					this.SendPropertyChanged("a_id");
					this.Ona_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_id", DbType="Int NOT NULL")]
		public int u_id
		{
			get
			{
				return this._u_id;
			}
			set
			{
				if ((this._u_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_idChanging(value);
					this.SendPropertyChanging();
					this._u_id = value;
					this.SendPropertyChanged("u_id");
					this.Onu_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_act_type", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string act_type
		{
			get
			{
				return this._act_type;
			}
			set
			{
				if ((this._act_type != value))
				{
					this.Onact_typeChanging(value);
					this.SendPropertyChanging();
					this._act_type = value;
					this.SendPropertyChanged("act_type");
					this.Onact_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fi_id", DbType="Int")]
		public System.Nullable<int> fi_id
		{
			get
			{
				return this._fi_id;
			}
			set
			{
				if ((this._fi_id != value))
				{
					if (this._file.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onfi_idChanging(value);
					this.SendPropertyChanging();
					this._fi_id = value;
					this.SendPropertyChanged("fi_id");
					this.Onfi_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_action_time", DbType="DateTime NOT NULL")]
		public System.DateTime action_time
		{
			get
			{
				return this._action_time;
			}
			set
			{
				if ((this._action_time != value))
				{
					this.Onaction_timeChanging(value);
					this.SendPropertyChanging();
					this._action_time = value;
					this.SendPropertyChanged("action_time");
					this.Onaction_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="file_action", Storage="_file", ThisKey="fi_id", OtherKey="f_id", IsForeignKey=true)]
		public file file
		{
			get
			{
				return this._file.Entity;
			}
			set
			{
				file previousValue = this._file.Entity;
				if (((previousValue != value) 
							|| (this._file.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._file.Entity = null;
						previousValue.actions.Remove(this);
					}
					this._file.Entity = value;
					if ((value != null))
					{
						value.actions.Add(this);
						this._fi_id = value.f_id;
					}
					else
					{
						this._fi_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("file");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_action", Storage="_user", ThisKey="u_id", OtherKey="u_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.actions.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.actions.Add(this);
						this._u_id = value.u_id;
					}
					else
					{
						this._u_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.files")]
	public partial class file : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _f_id;
		
		private int _u_id;
		
		private string _path;
		
		private System.DateTime _add_time;
		
		private EntitySet<action> _actions;
		
		private EntityRef<user> _user;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onf_idChanging(int value);
    partial void Onf_idChanged();
    partial void Onu_idChanging(int value);
    partial void Onu_idChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void Onadd_timeChanging(System.DateTime value);
    partial void Onadd_timeChanged();
    #endregion
		
		public file()
		{
			this._actions = new EntitySet<action>(new Action<action>(this.attach_actions), new Action<action>(this.detach_actions));
			this._user = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int f_id
		{
			get
			{
				return this._f_id;
			}
			set
			{
				if ((this._f_id != value))
				{
					this.Onf_idChanging(value);
					this.SendPropertyChanging();
					this._f_id = value;
					this.SendPropertyChanged("f_id");
					this.Onf_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_id", DbType="Int NOT NULL")]
		public int u_id
		{
			get
			{
				return this._u_id;
			}
			set
			{
				if ((this._u_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu_idChanging(value);
					this.SendPropertyChanging();
					this._u_id = value;
					this.SendPropertyChanged("u_id");
					this.Onu_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_time", DbType="DateTime NOT NULL")]
		public System.DateTime add_time
		{
			get
			{
				return this._add_time;
			}
			set
			{
				if ((this._add_time != value))
				{
					this.Onadd_timeChanging(value);
					this.SendPropertyChanging();
					this._add_time = value;
					this.SendPropertyChanged("add_time");
					this.Onadd_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="file_action", Storage="_actions", ThisKey="f_id", OtherKey="fi_id")]
		public EntitySet<action> actions
		{
			get
			{
				return this._actions;
			}
			set
			{
				this._actions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_file", Storage="_user", ThisKey="u_id", OtherKey="u_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.files.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.files.Add(this);
						this._u_id = value.u_id;
					}
					else
					{
						this._u_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_actions(action entity)
		{
			this.SendPropertyChanging();
			entity.file = this;
		}
		
		private void detach_actions(action entity)
		{
			this.SendPropertyChanging();
			entity.file = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.friends")]
	public partial class friend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _friendship_id;
		
		private int _u1_id;
		
		private int _u2_id;
		
		private System.DateTime _add_time;
		
		private EntityRef<user> _user;
		
		private EntityRef<user> _user1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfriendship_idChanging(int value);
    partial void Onfriendship_idChanged();
    partial void Onu1_idChanging(int value);
    partial void Onu1_idChanged();
    partial void Onu2_idChanging(int value);
    partial void Onu2_idChanged();
    partial void Onadd_timeChanging(System.DateTime value);
    partial void Onadd_timeChanged();
    #endregion
		
		public friend()
		{
			this._user = default(EntityRef<user>);
			this._user1 = default(EntityRef<user>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_friendship_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int friendship_id
		{
			get
			{
				return this._friendship_id;
			}
			set
			{
				if ((this._friendship_id != value))
				{
					this.Onfriendship_idChanging(value);
					this.SendPropertyChanging();
					this._friendship_id = value;
					this.SendPropertyChanged("friendship_id");
					this.Onfriendship_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u1_id", DbType="Int NOT NULL")]
		public int u1_id
		{
			get
			{
				return this._u1_id;
			}
			set
			{
				if ((this._u1_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu1_idChanging(value);
					this.SendPropertyChanging();
					this._u1_id = value;
					this.SendPropertyChanged("u1_id");
					this.Onu1_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u2_id", DbType="Int NOT NULL")]
		public int u2_id
		{
			get
			{
				return this._u2_id;
			}
			set
			{
				if ((this._u2_id != value))
				{
					if (this._user1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onu2_idChanging(value);
					this.SendPropertyChanging();
					this._u2_id = value;
					this.SendPropertyChanged("u2_id");
					this.Onu2_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_time", DbType="DateTime NOT NULL")]
		public System.DateTime add_time
		{
			get
			{
				return this._add_time;
			}
			set
			{
				if ((this._add_time != value))
				{
					this.Onadd_timeChanging(value);
					this.SendPropertyChanging();
					this._add_time = value;
					this.SendPropertyChanged("add_time");
					this.Onadd_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_friend", Storage="_user", ThisKey="u1_id", OtherKey="u_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.friends.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.friends.Add(this);
						this._u1_id = value.u_id;
					}
					else
					{
						this._u1_id = default(int);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_friend1", Storage="_user1", ThisKey="u2_id", OtherKey="u_id", IsForeignKey=true)]
		public user user1
		{
			get
			{
				return this._user1.Entity;
			}
			set
			{
				user previousValue = this._user1.Entity;
				if (((previousValue != value) 
							|| (this._user1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user1.Entity = null;
						previousValue.friends1.Remove(this);
					}
					this._user1.Entity = value;
					if ((value != null))
					{
						value.friends1.Add(this);
						this._u2_id = value.u_id;
					}
					else
					{
						this._u2_id = default(int);
					}
					this.SendPropertyChanged("user1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _u_id;
		
		private string _login;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _password;
		
		private string _email;
		
		private System.DateTime _join_date;
		
		private EntitySet<action> _actions;
		
		private EntitySet<file> _files;
		
		private EntitySet<friend> _friends;
		
		private EntitySet<friend> _friends1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onu_idChanging(int value);
    partial void Onu_idChanged();
    partial void OnloginChanging(string value);
    partial void OnloginChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onjoin_dateChanging(System.DateTime value);
    partial void Onjoin_dateChanged();
    #endregion
		
		public user()
		{
			this._actions = new EntitySet<action>(new Action<action>(this.attach_actions), new Action<action>(this.detach_actions));
			this._files = new EntitySet<file>(new Action<file>(this.attach_files), new Action<file>(this.detach_files));
			this._friends = new EntitySet<friend>(new Action<friend>(this.attach_friends), new Action<friend>(this.detach_friends));
			this._friends1 = new EntitySet<friend>(new Action<friend>(this.attach_friends1), new Action<friend>(this.detach_friends1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_u_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int u_id
		{
			get
			{
				return this._u_id;
			}
			set
			{
				if ((this._u_id != value))
				{
					this.Onu_idChanging(value);
					this.SendPropertyChanging();
					this._u_id = value;
					this.SendPropertyChanged("u_id");
					this.Onu_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this.OnloginChanging(value);
					this.SendPropertyChanging();
					this._login = value;
					this.SendPropertyChanged("login");
					this.OnloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_join_date", DbType="DateTime NOT NULL")]
		public System.DateTime join_date
		{
			get
			{
				return this._join_date;
			}
			set
			{
				if ((this._join_date != value))
				{
					this.Onjoin_dateChanging(value);
					this.SendPropertyChanging();
					this._join_date = value;
					this.SendPropertyChanged("join_date");
					this.Onjoin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_action", Storage="_actions", ThisKey="u_id", OtherKey="u_id")]
		public EntitySet<action> actions
		{
			get
			{
				return this._actions;
			}
			set
			{
				this._actions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_file", Storage="_files", ThisKey="u_id", OtherKey="u_id")]
		public EntitySet<file> files
		{
			get
			{
				return this._files;
			}
			set
			{
				this._files.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_friend", Storage="_friends", ThisKey="u_id", OtherKey="u1_id")]
		public EntitySet<friend> friends
		{
			get
			{
				return this._friends;
			}
			set
			{
				this._friends.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_friend1", Storage="_friends1", ThisKey="u_id", OtherKey="u2_id")]
		public EntitySet<friend> friends1
		{
			get
			{
				return this._friends1;
			}
			set
			{
				this._friends1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_actions(action entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_actions(action entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_files(file entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_files(file entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_friends(friend entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_friends(friend entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
		
		private void attach_friends1(friend entity)
		{
			this.SendPropertyChanging();
			entity.user1 = this;
		}
		
		private void detach_friends1(friend entity)
		{
			this.SendPropertyChanging();
			entity.user1 = null;
		}
	}
	
	public partial class UserRegisterResult
	{
		
		private string _login;
		
		private System.DateTime _join_date;
		
		public UserRegisterResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string login
		{
			get
			{
				return this._login;
			}
			set
			{
				if ((this._login != value))
				{
					this._login = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_join_date", DbType="DateTime NOT NULL")]
		public System.DateTime join_date
		{
			get
			{
				return this._join_date;
			}
			set
			{
				if ((this._join_date != value))
				{
					this._join_date = value;
				}
			}
		}
	}
	
	public partial class GetFilesResult
	{
		
		private int _f_id;
		
		private string _path;
		
		private System.DateTime _add_time;
		
		public GetFilesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_id", DbType="Int NOT NULL")]
		public int f_id
		{
			get
			{
				return this._f_id;
			}
			set
			{
				if ((this._f_id != value))
				{
					this._f_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this._path = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_add_time", DbType="DateTime NOT NULL")]
		public System.DateTime add_time
		{
			get
			{
				return this._add_time;
			}
			set
			{
				if ((this._add_time != value))
				{
					this._add_time = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
